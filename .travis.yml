language: cpp
sudo: required
dist: trusty

matrix:
  include:
    # 1/ Linux GCC Builds
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=g++-5 BUILD_TYPE='Release'
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=g++-5 BUILD_TYPE='Coverage'
    # 2/ Linux Clang Builds
    - compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env: COMPILER=clang++-3.8 BUILD_TYPE='Release'
    # 3/ OSX Clang Builds
    - os: osx
      osx_image: xcode7
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Debug'

    - os: osx
      osx_image: xcode7
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Release'


install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      echo "Nothin"
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew install cmake ccache
    fi

before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir -p Build
  - cd Build
  - cmake --version
  - cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE}

script:
  - make -j2
  - ctest -V
  - ./bin/runcppproject

after_success:
  - |
    if [[ "${BUILD_TYPE}" == "Coverage" ]]; then
      bash <(curl -s https://codecov.io/bash)
    fi
